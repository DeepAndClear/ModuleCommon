apply plugin: 'com.android.library'

android {
    // rootProject.ext.android['compileSdkVersion']
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    /**
     * java8 引用
     */
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main{
            jniLibs.srcDir 'libs'
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }

    repositories {
        flatDir { dirs 'libs' }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies['material']
    api rootProject.ext.dependencies['appcompat-v7']
    api rootProject.ext.dependencies['constraint-layout']
    api rootProject.ext.dependencies['recyclerview']
    api rootProject.ext.dependencies['smart-refreshlayout']
    api rootProject.ext.dependencies['annotations']
    api rootProject.ext.dependencies['mulitidex']

    api rootProject.ext.dependencies['logger']
    api rootProject.ext.dependencies['backlayout']
    api rootProject.ext.dependencies['ByeBurger']

    // rx
    api rootProject.ext.dependencies['rxandroid']
    api rootProject.ext.dependencies['rxjava']
    api rootProject.ext.dependencies['rxbinding']
    api rootProject.ext.dependencies['rxpermissions']

    // di
    api rootProject.ext.dependencies['butterknife']
    annotationProcessor rootProject.ext.dependencies['butterknife-compiler']

    // arouter
    api rootProject.ext.dependencies['arouter-api']
    annotationProcessor rootProject.ext.dependencies['arouter-compiler']

}
